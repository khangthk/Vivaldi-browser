// Copyright (c) 2015 Vivaldi Technologies AS. All rights reserved

[
  {
    "namespace": "autoUpdate",
    "compiler_options": {
      "implemented_in": "extensions/api/auto_update/auto_update_api.h"
    },
    "platforms": ["win", "mac"],
    "description": "Use the <code>chrome.autoupdate</code> API to interact with (Win)Sparkle.",
    "types": [
    ],
    "functions": [
      {
        "name": "checkForUpdates",
        "type": "function",
        "description": "Check for Vivaldi browser updates.",
        "parameters": [
          {
            "name": "withUi",
            "type": "boolean",
            "description": "Indicates whether we want the auto-update ui to appear."
          }
        ]
      },
      {
        "name": "isUpdateNotifierEnabled",
        "type": "function",
        "description": "Checks whether the update notifier is set to run on startup.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "boolean",
                "name": "result"
              }
            ]
          }
        ]
      },
      {
        "name": "enableUpdateNotifier",
        "type": "function",
        "description": "Sets the update notifier to run on startup and launches it.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "boolean",
                "name": "result"
              }
            ]
          }
        ]
      },
      {
        "name": "disableUpdateNotifier",
        "type": "function",
        "description": "Removes the update notifier from autorun and attempts to terminate it.",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "boolean",
                "name": "result"
              }
            ]
          }
        ]
      },
      {
        "name": "getAutoInstallUpdates",
        "type": "function",
        "description": "Checks whether we automatically install updates",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "boolean",
                "name": "result"
              }
            ]
          }
        ]
      },
      {
        "name": "setAutoInstallUpdates",
        "type": "function",
        "description": "Change automatically install updates setting",
        "parameters": [
          {
            "name": "autoinstall",
            "type": "boolean",
            "description": "Indicates whether we want to automatically install updates."
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onDidFindValidUpdate",
        "type": "function",
        "description": "Fired when a valid update is found.",
        "parameters": [
          {
            "name": "releaseNotesUrl",
            "type": "string",
            "description": "URL of the release notes of the update."
          }
        ]
      },
      {
        "name": "onWillDownloadUpdate",
        "type": "function",
        "description": "Fired when an update will be downloaded.",
        "parameters": [
        ]
      },
      {
        "name": "onDidDownloadUpdate",
        "type": "function",
        "description": "Fired when an update has been downloaded.",
        "parameters": [
        ]
      },
      {
        "name": "onWillInstallUpdateOnQuit",
        "type": "function",
        "description": "Fired when an update will be installed on restart or quit.",
        "parameters": [
        ]
      },
      {
        "name": "onUpdaterWillRelaunchApplication",
        "type": "function",
        "description": "Fired just before the updater restarts the application.",
        "parameters": [
        ]
      },
      {
        "name": "onUpdaterDidRelaunchApplication",
        "type": "function",
        "description": "Fired when an application has been restarted due to an update.",
        "parameters": [
        ]
      },
      {
        "name": "onDidAbortWithError",
        "type": "function",
        "description": "Fired when an update fails.",
        "parameters": [
        ]
      }
    ]
  }
]
