SKIP: FAILED

#include <metal_stdlib>
using namespace metal;
template<typename T, size_t N>
struct tint_array {
  const constant T& operator[](size_t i) const constant { return elements[i]; }
  device T& operator[](size_t i) device { return elements[i]; }
  const device T& operator[](size_t i) const device { return elements[i]; }
  thread T& operator[](size_t i) thread { return elements[i]; }
  const thread T& operator[](size_t i) const thread { return elements[i]; }
  threadgroup T& operator[](size_t i) threadgroup { return elements[i]; }
  const threadgroup T& operator[](size_t i) const threadgroup { return elements[i]; }
  T elements[N];
};


thread tint_array<int, 3> zero = {};
thread tint_array<int, 3> init = tint_array<int, 3>{1, 2, 3};
kernel void tint_symbol() {
  tint_array<int, 3> v0 = zero;
  tint_array<int, 3> v1 = init;
}
program_source:16:27: error: program scope variable must reside in constant address space
thread tint_array<int, 3> zero = {};
                          ^
program_source:17:27: error: program scope variable must reside in constant address space
thread tint_array<int, 3> init = tint_array<int, 3>{1, 2, 3};
                          ^
program_source:19:22: warning: unused variable 'v0' [-Wunused-variable]
  tint_array<int, 3> v0 = zero;
                     ^
program_source:20:22: warning: unused variable 'v1' [-Wunused-variable]
  tint_array<int, 3> v1 = init;
                     ^

