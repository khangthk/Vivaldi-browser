SKIP: FAILED

#include <metal_stdlib>
using namespace metal;
template<typename T, size_t N>
struct tint_array {
  const constant T& operator[](size_t i) const constant { return elements[i]; }
  device T& operator[](size_t i) device { return elements[i]; }
  const device T& operator[](size_t i) const device { return elements[i]; }
  thread T& operator[](size_t i) thread { return elements[i]; }
  const thread T& operator[](size_t i) const thread { return elements[i]; }
  threadgroup T& operator[](size_t i) threadgroup { return elements[i]; }
  const threadgroup T& operator[](size_t i) const threadgroup { return elements[i]; }
  T elements[N];
};


thread tint_array<uint, 1> x_1 = {};
void main_1() {
}
fragment void tint_symbol(uint x_1_param [[sample_mask]]) {
  x_1[0] = x_1_param;
  main_1();
}
program_source:16:28: error: program scope variable must reside in constant address space
thread tint_array<uint, 1> x_1 = {};
                           ^

